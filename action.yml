name: Create namespace
description: "Create namespace with image pull secret on given cluster"

inputs:
  # commonRepoAccessToken:
  #   description: Common repository access token
  #   required: true
  namespace:
    description: Target namespace
    required: true
  kubeConfig:
    description: Target cluster kubeconfig
    required: true
  containerRegistryHost:
    description: Container registry hostname
    required: true
  containerRegistryUser:
    description: Container registry username
    required: true
  containerRegistryPassword:
    description: Container registry password/token
    required: true
  secretName:
    description: Container registry secret name
    required: true

runs:
  using: "composite"

  steps:
    - name: Create default kubeconfig
      shell: bash
      run: |
        mkdir $HOME/.kube
        echo "${{ inputs.kubeConfig }}" | base64 -d > $HOME/.kube/config
        chmod 700 $HOME/.kube
        chmod 600 $HOME/.kube/config

    - name: Create namespace
      shell: bash
      run: |
        kubectl create namespace ${{ inputs.namespace }} \
        --dry-run=client \
        --save-config \
        --output yaml \
        | kubectl apply \
        -f -

    - name: Create container registry secret
      shell: bash
      run: |
        kubectl create secret docker-registry ${{ inputs.secretName }} \
        --namespace=${{ inputs.namespace }} \
        --docker-server=${{ inputs.containerRegistryHost }} \
        --docker-username=${{ inputs.containerRegistryUser }} \
        --docker-password=${{ inputs.containerRegistryPassword }} \
        --save-config \
        --dry-run=client \
        --output=yaml | \
        kubectl apply \
        -f -
